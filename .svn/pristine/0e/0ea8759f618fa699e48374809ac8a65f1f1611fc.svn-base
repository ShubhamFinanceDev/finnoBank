package com.kemal.spring.web.controllers.viewControllers.adminControllers;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.kemal.spring.domain.BatchDetails;
import com.kemal.spring.service.BatchDetailsService;
import com.kemal.spring.web.dto.BatchDTO;


@Controller
@RequestMapping("")
public class BatchController {
	private final BatchDetailsService batchService;

	public BatchController(BatchDetailsService batchService) {
		this.batchService = batchService;
	}

	// Get method for creating batch
	@GetMapping("/pagesignout")
	public ModelAndView signout() {

		ModelAndView modelAndView = new ModelAndView("website/login");

		// modelAndView.addObject("batchDto", new BatchDTO());
		return modelAndView;
	}

	// Get method for creating batch
	@GetMapping("/batchcreate")
	public ModelAndView batchcreation() {

		ModelAndView modelAndView = new ModelAndView("users/batchcreation");

		modelAndView.addObject("batchDto", new BatchDTO());
		return modelAndView;
	}

	// GET method for fetch

	@GetMapping("/fetchdata")
	public ModelAndView fetch() {

		ModelAndView modelAndView = new ModelAndView();

		modelAndView.addObject("batchDto", new BatchDTO());
		return modelAndView;
	}

	// GET method for add

	@GetMapping("/adddata")
	public ModelAndView add() {

		ModelAndView modelAndView = new ModelAndView();

		modelAndView.addObject("batchDto", new BatchDTO());
		return modelAndView;
	}

	// Get method for payment update
	@GetMapping("/updatepayment")
	public ModelAndView paymentupdation(Model model) {
		// using below lines we are populating list
		ModelAndView modelAndView = new ModelAndView("users/paymentupdate");
		model.addAttribute("batchdetails", batchService.findPendingApplicationBybatchid());
		return modelAndView;

	}

	// Get method for payment update page
	@GetMapping("/update/{id}")
	public String batchupdate(@PathVariable String id) {

		BatchDetails batch = batchService.findById(Long.parseLong(id));
		// batch.setActive(0);
		batchService.save(batch);
		// return modelAndView;
		return "redirect:/updatepayment";

	}

	

	// Get method for batch delete
	@GetMapping("/showdeletebatch")
	public ModelAndView batchdelate(Model model) {
		ModelAndView modelAndView = new ModelAndView("users/batchdelete");
		model.addAttribute("batchdetails", batchService.findApplicationBybatchid());
		return modelAndView;

	}

	// Get method for delete page
	@GetMapping("/deletebatch/{id}")
	public String batchdelation(@PathVariable String id) {

		BatchDetails batch = batchService.findById(Long.parseLong(id));
		batch.setActive(0);
		batchService.save(batch);
		// return modelAndView;
		return "redirect:/showdeletebatch";

	}

}
